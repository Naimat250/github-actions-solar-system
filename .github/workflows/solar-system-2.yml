name: Solar System Workflow using container for node version 
env:
  MONGO_URI: ${{vars.MONGO_URI}}
  MONGO_USERNAME: ${{vars.MONGO_USERNAME}}
  MONGO_PASSWORD: ${{secrets.MONGO_PASSWORD}}
on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'
    
jobs:
    unit-testing:
        name: Unit Testing
        runs-on: ubuntu-latest
        container: 
            image: 'node:20'
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        # - name: Setup NodeJS Version
        #   uses: actions/setup-node@v4
        #   with:
        #     node-version: 20

        - name: Cache NPM dependencies
          uses: actions/cache@v4
          with:
            path: ~/.npm
            key: '${{ runner.os }}-node-modules-${{ hashFiles(''package-lock.json'') }}'
    
        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          run: npm test
          
        - name: Archive Test Result
          uses: actions/upload-artifact@v4
          with:
            name: Mocha-Test-Result
            path: test-results.xml
    
    docker:
      permissions: 
        packages: write 
      runs-on: ubuntu-latest
      needs: unit-testing
      steps:
        - uses: actions/checkout@v4
        
        - name: Set lowercase repository owner
          run: echo "REPO_OWNER_LC=${OWNER,,}" >> $GITHUB_ENV
          env:
            OWNER: ${{ github.repository_owner }}

        - uses: docker/login-action@v3
          with:
            registry: ghcr.io
            username: '${{ github.repository_owner }}'
            password: '${{ secrets.GITHUB_TOKEN }}'

        - uses: docker/build-push-action@v6
          with:
            context: .
            push: true
            tags: 'ghcr.io/${{ env.REPO_OWNER_LC }}/solar-system:${{ github.sha }}'
    
    dev-deploy:
      name: dev-deploy
      needs: docker 
      runs-on: ubuntu-latest
      environment: 
        name: development
      steps:
        - name: Checkout the repo
          uses: actions/checkout@v4

        - name: Setup kubectl 
          uses: azure/setup-kubectl@v4
          with:
            version: 'v1.28.1' # default is latest stable
          # id: install  
        
        - name: Set Context
          uses: azure/k8s-set-context@v3
          with: 
            method: kubeconfig
            kubeconfig: '${{ secrets.KUBECONFIG }}'
        
        - name: Check CLuster Info 
          run: kubectl version -o yaml